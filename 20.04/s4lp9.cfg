d-i debconf/priority string critical
d-i auto-install/enable boolean true

# use -proposed udebs
# d-i apt-setup/proposed boolean true

## base-installer  base-installer/install-recommends boolean true
d-i pkgsel/update-policy select none
d-i pkgsel/include string bridge-utils ebtables ssh-import-id lvm2 software-properties-common net-tools snapd


#
# Localization
#
d-i debian-installer/language string en
d-i debian-installer/country string US
d-i debian-installer/locale string en_US.UTF-8


# use static network configuration
d-i netcfg/disable_autoconfig boolean true
d-i netcfg/disable_dhcp boolean true

d-i s390-zfcp/no_zfcp_hosts note
d-i s390-zfcp/select_zfcp_host string Finish

d-i s390-dasd/dasd string 0.0.2b5b
d-i s390-dasd/auto-format boolean true
d-i s390-dasd/force-format boolean false

# optional lines to overwrite old RAIDs and LVMs ....
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-lvm/device_remove_lvm_span boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# partitioning of a single DASD with two partitions
d-i partman-auto/disk string /dev/disk/by-path/ccw-0.0.2b5b
d-i partman-auto/method string lvm
d-i partman-auto-lvm/new_vg_name string system
d-i partman-auto-lvm/guided_size string 20GB
d-i partman-auto/expert_recipe string                         \
     basic-boot ::                                            \
              500 2048 500 ext4                               \
                      $primary{ }                             \
                      $bootable{ }                            \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ /boot }                     \
              .                                               \
              14336 5 17408 ext4                              \
                      $lvmok{ }                               \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ / }                         \
              .                                               \
              2048 20 2048	linux-swap                    \
		      $lvmok{ }				      \
                      method{ swap } format{ }                \
              .                                               \

d-i partman-auto/choose_recipe select basic-boot
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# provide network-console password
d-i network-console/password password pass4inst
d-i network-console/password-again password pass4inst
d-i network-console/start note

# user setup
d-i passwd/user-fullname string ubuntu
d-i passwd/username string ubuntu
d-i passwd/user-password-crypted password $6$8jPo3u8w2zq$uREl/dKDbgqqZ7pAHPQZ.6LX.zLGIkdW9iN/KfqW7wJc/2d7.dFxqLVAUAzf2vCcPtvT7l/1Tz5.0ijhEtzHm0

d-i user-setup/encrypt-home boolean false

# HW clock
d-i clock-setup/utc boolean true

# servant mirror settings
d-i mirror/country string manual
d-i mirror/protocol string http
d-i mirror/http/hostname string us.ports.ubuntu.com
d-i mirror/http/directory string /

# Use no proxy
d-i mirror/http/proxy string

# The Debian release to install
d-i mirror/suite string focal

# do not enable live installer, use normal instead
d-i live-installer/enable boolean false

# Software selection
d-i tasksel/first multiselect standard system utilities, OpenSSH server, Basic Ubuntu server

# Configuration script - must be interpreted as a single line
#d-i preseed/late_command string chmod 755 /tmp/late_command.sh ; /tmp/late_command
d-i partman/early_command string sh -c 'set -- $(vgs --rows --noheadings | head -n 1); for vg in "$@"; do vgremove -f "$vg"; done'

d-i preseed/late_command string \
HOSTNAME="s4lp9";\
hostname $HOSTNAME;\
echo "$HOSTNAME" > /target/etc/hostname;\
sed -i "s/^127.0.0.1\s*/\0$HOSTNAME /" /target/etc/hosts;\
: ;\
NIC_ID_1="0.0.c000";\
NIC_NAME_1="encc000";\
NIC_VLAN_1="2893";\
: ;\
: A for loop later in this script will configure disks from 2 on.;\
: DISK_FS, if "true" will create a filesystem on the disk;\
: ;\
DISK_COUNT=5;\
: ;\
DISK_ID_1="0.0.2b5b";\
DISK_SIZE_1="20";\
DISK_NAME_1="root";\
DISK_FS_1="true";\
: ;\
DISK_ID_2="0.0.2b5c";\
DISK_SIZE_2="20";\
DISK_NAME_2="ceph";\
DISK_FS_2="true";\
: ;\
DISK_ID_3="0.0.2b5d";\
DISK_SIZE_3="20";\
DISK_NAME_3="swift";\
DISK_FS_3="true";\
: ;\
DISK_ID_4="0.0.2b0f" ;\
DISK_SIZE_4="20" ;\
DISK_NAME_4="snapshot_a" ;\
DISK_ADD_LVM_4="true" ;\
: ;\
DISK_ID_5="0.0.2b1f" ;\
DISK_SIZE_5="20" ;\
DISK_NAME_5="snapshot_b" ;\
DISK_ADD_LVM_5="true" ;\
: ;\
: FTP Server details... ;\
FTP_SERVER="10.13.0.2";\
: ;\
: Configure bridge0... ;\
: ;\
sed -i "/id:/a\  bridges:" /target/etc/netplan/01-netcfg.yaml; \
sed -i "/bridges:/a\    bridge0:" /target/etc/netplan/01-netcfg.yaml; \
sed -i "/bridge0:/a\      interfaces: [ encc000.2893 ]" /target/etc/netplan/01-netcfg.yaml; \
: ;\
: Switch LXD bridge from lxdbr0 to bridge0... ;\
: ;\
echo "http_proxy=http://squid.internal:3128" > /etc/environment; \
echo "https_proxy=https://squid.internal:3128" > /etc/environment; \
in-target sudo snap install lxd; \
in-target lxc network detach-profile lxdbr0 default eth0; \
in-target lxc network attach-profile bridge0 default eth0; \
sed -i '/.*proxy.*/d' /etc/environment; \
: ;\
: Disable UFW in Artful and later ;\
in-target systemctl disable ufw ;\
in-target sudo apt-get remove ufw -y ;\
: ;\
: Configure ssh and add users... ;\
: ;\
in-target wget ftp://${FTP_SERVER}/openstack/90-ubuntu -O /etc/sudoers.d/90-ubuntu; \
in-target chmod 0440 /etc/sudoers.d/90-ubuntu; \
in-target mkdir /home/ubuntu/.ssh/; \
in-target ssh-import-id sfeole james-page freyes uosci-testing-bot -o /home/ubuntu/.ssh/authorized_keys2; \
in-target chown -R ubuntu: /home/ubuntu/.ssh/; \
: ;\
: Fix IOCTL errors ;\
: ;\
sed -i 's/mesg n || true/tty -s \&\& mesg n || true/g' /target/root/.profile ;\
: ;\
: Configure lvm snapshots - this will take a snapshot after the system has been built... ;\
: SNAPSHOT OCCURS AFTER EACH REBOOT - FIX ;\
: ;\
in-target wget ftp://${FTP_SERVER}/openstack/mk-lvm-snapshots-13g.service -O /etc/systemd/system/mk-lvm-snapshots.service; \
in-target wget ftp://${FTP_SERVER}/openstack/mac_rewrite_lxd-snap.sh -O /usr/local/bin/mac_rewrite_lxd.sh; \
in-target chmod 644 /etc/systemd/system/mk-lvm-snapshots.service; \
in-target systemctl enable mk-lvm-snapshots; \
: ;\
: Get and cron mac_rewrite mac address workaround for OSD cards and bridge interface ;\
: ;\
in-target chmod 755 /usr/local/bin/mac_rewrite_lxd.sh; \
printf "* * * * * root /usr/local/bin/mac_rewrite_lxd.sh\n" >> /target/etc/crontab; \
: ;\
: Prepare online_all_dasds workaround for launchpad bug 1673992 ;\
printf "#!/bin/sh\n\nPREREQ=\"\"\nprereqs()\n{\n\techo \"\$PREREQ\"\n}\n\ncase \$1 in \nprereqs)\n\tprereqs\n\texit 0\n\t;;\nesac\n\n#into target/etc\n" > /target/etc/initramfs-tools/scripts/init-premount/online_all_dasds ;\
: ;\
: Do disk stuff - start from disk 2, create a filesystem if DISK_FS[disk_num] = true ;\
: ;\
for disk_num in `seq 2 $DISK_COUNT` ;\
        do DISK_ID=$(eval echo \$DISK_ID_$disk_num) ;\
        DISK_NAME=$(eval echo \$DISK_NAME_$disk_num) ;\
        DISK_FS=$(eval echo \$DISK_FS_$disk_num) ;\
        DISK_ADD_LVM=$(eval echo \$DISK_ADD_LVM_$disk_num) ;\
        in-target chzdev -Ve $DISK_ID ;\
        echo "yes"|dasdfmt -F /dev/disk/by-path/ccw-$DISK_ID --label=$DISK_NAME -b 4096; \
        sleep 30; \
        fdasd /dev/disk/by-path/ccw-$DISK_ID -a -l $DISK_NAME ;\
        if [ "$DISK_FS" = "true" ] ;\
                then sleep 30 ;\
                mkfs.xfs -L $DISK_NAME -f -b size=4096 /dev/disk/by-path/ccw-${DISK_ID}-part1; \
                if [ "$DISK_NAME" != "ceph" ]; then \
                        in-target mkdir /mnt/${DISK_NAME}; \
                        printf "LABEL=\"${DISK_NAME}\"\t/mnt/${DISK_NAME}\txfs\tdefaults\t0\t0\n" >> /target/etc/fstab; \
                fi ;\
        fi ;\
        if [ "$DISK_ADD_LVM" = "true" ] ;\
                then pvcreate /dev/disk/by-path/ccw-${DISK_ID}-part1; \
                vgextend system /dev/disk/by-path/ccw-${DISK_ID}-part1 ;\
                printf "echo 1 > /sys/bus/ccw/devices/${DISK_ID}/online\n" >> /target/etc/initramfs-tools/scripts/init-premount/online_all_dasds ;\
        fi ;\
chmod 755 /target/etc/initramfs-tools/scripts/init-premount/online_all_dasds ;\
in-target update-initramfs -u -k all;\
done

# reboot at the end
d-i finish-install/reboot_in_progress note

